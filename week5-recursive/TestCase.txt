[20,10,5,5,3,2,20,10] 
target>> 20
# OUTPUT must be:
# 20
# 10 5 5
# 10 5 3 2
# 10 5 3 2
# 10 10
# 5 5 10
# 5 3 2 10
# 5 3 2 10
# 20

[20,10,5,10,5]
target>> 20
# 20
# 10,5,5
# 10,10
# 5,10,5

[1, 2, 3, 4]
target>> 7
# 1 2 4
# 3 4

[2, 4, 1, 3, 5, 8]
target>> 10
# 2 4 1 3
# 2 3 5
# 2 8
# 4 1 5

















#################

def knapsack( max, item, i=0, ans=[] ):

  # plus item into answer
  ans.append(item[i])
  
  # recursion with smaller list
  if sum(ans) < max:
      if i+1 < len(item):
        knapsack(max, item[i+1:], 0, ans)

  # show ANS
  elif sum(ans) == max:
      print(ans) 
  
  # remove last answer when end each recursion & move index
  ans.pop()
  if i is not len(item)-1:
      knapsack(max, item, i+1, ans)